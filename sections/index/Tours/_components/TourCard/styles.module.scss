@import "styles/utils/mixins";
.card {
  perspective: 150rem;
  -moz-perspective: 150rem;
  position: relative;
  height: 52rem;
  margin: 3rem;
  @include respond(tab-land) {
    width: 70%;
    margin: 3rem auto;
  }
  @include respond(tab-port) {
    width: 85%;
  }
  @include respond(phone) {
    width: 95%;
  }

  &:hover .sideFront {
    transform: rotateY(-180deg);
  }

  &:hover .sideBack {
    transform: rotateY(0);
  }
}

.side {
  height: 52rem;
  transition: all 0.8s ease;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  backface-visibility: hidden;
  border-radius: 3px;
  overflow: hidden;
  box-shadow: 0 1.5rem 4rem rgba(black, 0.15);
  overflow: hidden;
}

.sideFront {
  composes: side;
}

.sideBack {
  composes: side;
  transform: rotateY(180deg);
  background-image: linear-gradient(
    to right bottom,
    rgba(var(--primary-light-rgb), 0.8),
    rgba(var(--primary-dark-rgb), 0.8)
  );
  &Content {
    display: grid;
    place-items: center;
    height: 100%;
    text-align: center;
    margin-bottom: 8rem;
    .priceWrapper {
      color: white;
      .priceOnly {
        font-size: 1.5rem;
        text-transform: uppercase;
      }
      .priceValue {
        font-size: 6rem;
        font-weight: 100;
      }
    }
  }
}

.sideBackLeft {
  composes: sideBack;
  composes: side;
  opacity: 0.85;
  background-image: linear-gradient(
    to right bottom,
    var(--secondary-light),
    var(--secondary-dark)
  );
}
.sideBackCenter {
  composes: sideBack;
  composes: side;
  background-image: linear-gradient(
    to right bottom,
    var(--primary-light),
    var(--primary-dark)
  );
}

.sideBackRight {
  composes: sideBack;
  composes: side;
  background-image: linear-gradient(
    to right bottom,
    var(--tertiary-light),
    var(--tertiary-dark)
  );
}

.image {
  height: 23rem;
  background-size: cover;
  clip-path: polygon(0 0, 100% 0, 100% 85%, 0% 100%);
  opacity: 0.8;
  background-blend-mode: screen;
}

//image urls are hardcoded, in a real project I would use any css-in-js solution
.imageLeft {
  composes: image;
  background-image: url(../../../../../public/nat-5.jpg),
    linear-gradient(
      to right bottom,
      var(--secondary-light),
      var(--secondary-dark)
    );
}

.imageCenter {
  composes: image;
  background-image: url(../../../../../public/nat-6.jpg),
    linear-gradient(to right bottom, var(--primary-light), var(--primary-dark));
}

.imageRight {
  composes: image;
  background-image: url(../../../../../public/nat-7.jpg),
    linear-gradient(
      to right bottom,
      var(--tertiary-light),
      var(--tertiary-dark)
    );
}

.title {
  color: white;
  font-weight: 400;
  font-size: 2.5rem;
  position: absolute;
  @media (max-width: 90rem) {
    right: 4rem;
  }
  @media (max-width: 80rem) {
    right: 5rem;
  }

  top: 12rem;
  right: 2rem;
  text-align: right;
  z-index: 1;
  width: 55%;
  text-transform: uppercase;
}

.titleBackground {
  box-decoration-break: clone;
  --webkit-box-decoration-break: clone;
  padding: 1rem 1.75rem;
  opacity: 0.85;
}

.titleBackgroundLeft {
  composes: titleBackground;
  background-image: linear-gradient(
    to right bottom,
    var(--secondary-light),
    var(--secondary-dark)
  );
}
.titleBackgroundCenter {
  composes: titleBackground;
  background-image: linear-gradient(
    to right bottom,
    var(--primary-light),
    var(--primary-dark)
  );
}
.titleBackgroundRight {
  composes: titleBackground;
  background-image: linear-gradient(
    to right bottom,
    var(--tertiary-light),
    var(--tertiary-dark)
  );
}

.details {
  ul {
    padding-top: 2rem;
    list-style: none;
    width: 80%;
    margin: auto;
    li {
      text-align: center;
      font-size: 1.5rem;
      padding: 1rem;
      &:not(:last-child) {
        border-bottom: 1px solid gray;
      }
    }
  }
}
